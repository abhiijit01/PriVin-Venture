
@{
    ViewBag.Title = "CounterIndex";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12 ">
            <h2></h2>
            <div class="card-box ribbon-box">
                <div class="ribbon ribbon-custom">Index Counter</div>
                <div class="col-md-12 box bb">
                    <table id="Demogrid"></table>
                    <div id="pager"></div>
                </div>
            </div>

        </div>
    </div>
</div>

<script>
    $(function ()
    {
            
            $("#Demogrid").jqGrid
            ({
                url: "/Admin/Counter/ViewCounter",
                datatype: 'json',
                mtype: 'GET',
                //table header name
                colNames: ['Counter Id', 'Counter Name'],
                //colModel takes the data from controller and binds to grid
                colModel: [
                { name: "countid", editable: true, key: true, index: 'countid', hidden: true, editoptions: { readonly: "readonly" }, search: false },
                 { name: "countnm", editable: true, editrules: { custom: true, custom_func: countnmCheck, required: true }, index: 'countnm', key: false },
                //{ name: "outnm", editable: true, editrules: { custom: true, custom_func: outnmCheck, required: true }, index: 'outnm', key: false },
                //{ name: "outat", editable: true, editrules: { custom: true, custom_func: outatCheck, required: true }, index: 'outat', key: false },
                //{ name: "statename", editable: true, editrules: { custom: true, custom_func: statenameCheck, required: true }, index: 'statename', key: false, edittype: "select", editoptions: { value: getAllState() } },
                //{ name: "distname", editable: true, editrules: { custom: true, custom_func: distnameCheck, required: true }, index: 'distname', key: false, edittype: "select", editoptions: { value: "Select a dist" } },
                //{ name: "outpin", editable: true, editrules: { custom: true, custom_func: outpinCheck, required: true }, index: 'outpin', key: false },
                //{ name: "cpnm", editable: true, editrules: { custom: true, custom_func: cpnmCheck, required: true }, index: 'cpnm', key: false },
                //{ name: "cpemail", editable: true, editrules: { custom: true, custom_func: cpemailCheck, required: true }, index: 'cpemail', key: false },
                //{ name: "contct", editable: true, editrules: { custom: true, custom_func: contctCheck, required: true }, index: 'contct', key: false },
                ],

                rowNum: 10,
                viewrecords: true,
                sortorder: 'desc',
                caption: 'Counter Information',
                emptyrecords: 'No records',
                jsonReader:
                {
                    root: "rows",
                    page: "page",
                    total: "total",
                    records: "records",
                    repeatitems: false,
                    Id: "0"
                },
                autowidth: true,
                multiselect:true,
                pager: jQuery('#pager'),
                rowList: [10, 20, 30, 40],
            }).navGrid('#pager',
            {
                edit: true,
                add: true,
                del: true,
                search: true,
                refresh: true

            },

            {
                // edit option
                zIndex: 100,
                type: 'Post',
                editCaption: "Edit Counter",
                url: '/Admin/Counter/UpdateCounter',
                closeOnEscape: true,
                closeAfterEdit: true,
                recreateForm: true,
                //afterShowForm: populateStates,
                afterComplete: function (response) {
                    if (response.responseText) {
                        alert(response.responseText);
                    }
                }
            },
            {
                // add option

                zIndex: 100,
                type: 'Post',
                url: "/Admin/Counter/InsertCounter",
                editCaption: "Create Counter",
                closeOnEscape: true,
                closeAfterAdd: true,
                //afterShowForm: populateStates,
                afterComplete: function (response) {
                    if (response.responseText) {
                        alert(response.responseText);
                        }
                    else {
                        alert(response.responseText);
                        }
                }
            },
            {
                // delete option
                zIndex: 100,
                type: 'Post',
                url: "/Admin/Counter/DeleteCounter",
                closeOnEscape: true,
                closeAfterDelete: true,
                recreateForm: true,
                msg: "Are you sure you want to delete this Counter Details?",
                afterComplete: function (response) {
                    if (response.responseText) {
                        alert(response.responseText);
                    }
                }
            },
            //Search option
            {
                zIndex: 100,
                caption: "Search Counter",
                sopt:['cn'],
                closeAfterSearch: true,
                searchtext: "Search Counter"
            });

            //function populateStates() {
            //    
            //    updateStateCallBack($("#statename").val(), true);
            //    $("#statename").bind("change", function (e) {
            //        updateStateCallBack($("#statename").val(), false);
            //    });
            //}
            //function updateStateCallBack(country, setselected) {
            //    
            //    var current = $("#Demogrid").jqGrid('getRowData', $("#Demogrid")[0].p.selrow).distname;
            //    var countryVal = $("#statename").val();
            //    $("#distname").empty().append('<option selected="selected" value="0" disabled = "disabled">-Select-</option>');
            //    $.ajax({
            //        url: "/Admin/District/GetDistList",
            //        type: "POST",
            //        dataType: "JSON",
            //        async: false,
            //        contentType: "application/json; charset=utf-8",
            //        data: JSON.stringify({
            //            St_Id: +countryVal
            //        }),
            //        success: function (cities) {
            //            $("#distname").empty().append('<option selected="selected" value="0">-Select-</option>');
            //            $.each(cities, function (i, city) {
            //                $("#distname").append($('<option></option>').val(city.Dst_Id).html(city.Dst_Nm));
            //            });
            //            $("#distname option:contains(" + current + ")").attr('selected', 'selected');
            //        },
            //        error: function (response) {

            //        }

            //    });

            //}
    });
    //function getAllOffices() {
    //    
    //    var OfficeList = ":Select;";
    //    $.ajax({
    //        type: "POST",
    //        url: "/Admin/Office/GetAllOffice",
    //        dataType: "JSON",
    //        async: false,
    //        data: '',
    //        contentType: "application/json; charset=utf-8",
    //        success: function (msg) {
    //            if (msg != undefined && msg.length > 0) {
    //                for (var i = 0; i < msg.length; i++) {
    //                    if (i == msg.length - 1) {
    //                        OfficeList += "" + msg[i].oid + ":" + msg[i].onm + "";
    //                    }
    //                    else {
    //                        OfficeList += "" + msg[i].oid + ":" + msg[i].onm + ";";
    //                    }
    //                }
    //            }
    //        },
    //        error: function (response) {
    //        }
    //    });
    //    return OfficeList;
    //}
    //function getAllState() {
    //    
    //    var StateList = ":Select;";
    //    $.ajax({
    //        type: "POST",
    //        url: "/Admin/State/GetAllStateList",
    //        dataType: "JSON",
    //        async: false,
    //        data: '',
    //        contentType: "application/json; charset=utf-8",
    //        success: function (msg) {
    //            if (msg != undefined && msg.length > 0) {
    //                for (var i = 0; i < msg.length; i++) {
    //                    if (i == msg.length - 1) {
    //                        StateList += "" + msg[i].St_Id + ":" + msg[i].St_Nm + "";
    //                    }
    //                    else {
    //                        StateList += "" + msg[i].St_Id + ":" + msg[i].St_Nm + ";";
    //                    }
    //                }
    //            }
    //        },
    //        error: function (response) {
    //        }
    //    });
    //    return StateList;
    //}


    //function getAllDist() {
    //    
    //    var DistList = ":Select;";
    //    $.ajax({
    //        type: "POST",
    //        url: "/Admin/District/GetDistList",
    //        dataType: "JSON",
    //        async: false,
    //        data: '',
    //        contentType: "application/json; charset=utf-8",
    //        success: function (msg) {
    //            if (msg != undefined && msg.length > 0) {
    //                for (var i = 0; i < msg.length; i++) {
    //                    if (i == msg.length - 1) {
    //                        DistList += "" + msg[i].Dst_Id + ":" + msg[i].Dst_Nm + "";
    //                    }
    //                    else {
    //                        DistList += "" + msg[i].Dst_Id + ":" + msg[i].Dst_Nm + ";";
    //                    }
    //                }
    //            }
    //        },
    //        error: function (response) {
    //        }
    //    });
    //    return DistList;
    //}


        //validation for Dept code input field
    var countnmCheck = function (value, countnm) {
        if (/^[a-zA-Z\s]+$/.test(value)) {
            return [true];
        } else {
            return [false, "Incorrect input for the '" + countnm + "' column."]
        }
    };
    //var outnmCheck = function (value, outat) {
    //    if (/^[a-zA-Z\s]+$/.test(value)) {
    //        return [true];
    //    } else {
    //        return [false, "Incorrect input for the '" + outat + "' column."]
    //    }
    //};
    //    //validation for Dept Name input field
    //    var outatCheck = function (value, outat) {
    //        if (/^[a-zA-Z\s]+$/.test(value)) {
    //            return [true];
    //        } else {
    //            return [false, "Incorrect input for the '" + outat + "' column."]
    //        }
    //    };

    //    var statenameCheck = function (value, statename) {
    //        if (value != 0) {
    //            return [true];
    //        } else {
    //            return [false, "" + statename + " : Field is required"]
    //        }
    //    };
    //    var distnameCheck = function (value, distname) {
    //        if (value != 0) {
    //            return [true];
    //        } else {
    //            return [false, "" + distname + " : Field is required"]
    //        }
    //    };
    //    var outpinCheck = function (value, outpin) {
    //        if (!/^([0-9](6,6))+$/.test(value)) {
    //            return [true];
    //        } else {
    //            return [false, "Incorrect input for the '" + outpin + "' column. (Suggestion Pin code shoiuld be only 6 digit)"]
    //        }
    //    };
    //    var cpnmCheck = function (value, cpnm) {
    //        if (/^[a-zA-Z\s]+$/.test(value)) {
    //            return [true];
    //        } else {
    //            return [false, "Incorrect input for the '" + cpnm + "' column."]
    //        }
    //    };

    //    var contctCheck = function (value, contct) {
    //        if (!/^([0-9](10,10))+$/.test(value)) {
    //            return [true];
    //        } else {
    //            return [false, "Incorrect input for the '" + contct + "' column."]
    //        }
    //    };

    //    var cpemailCheck = function (value, cpemail) {

    //        if (!/^[a-zA-Z]*$/g.test(value)) {
    //            return [true];
    //        } else {
    //            return [false, "Incorrect input for the '" + cpemail + "' column."]
    //        }
    //    };


</script>




